// upgrades_configuration.cpp
//
// last-edit-by: <>
//
// Description:
//
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// $Log:$
//

#ifndef GAME_CONFIGURATION_H
#define GAME_CONFIGURATION_H 1


#include "ship/upgrades_helper.h"
#include "ship/Price.h"

namespace GameConfig
{

const BigNum initial_game_resources = BigNum(0);

namespace Upgrade{


// Quantom coil
const double increm_upgrade_1_increase_factor = 1.15;
const Price increm_upgrade_1_price = Price(Resource_ID::cinetic_energy, BigNum(30));
const std::vector<Upgrade_ID> increm_upgrade_1_depend = {Upgrade_ID::unique_upgrade_2};
const double increm_upgrade_1_cinetic_gain = 1;
const std::vector<Upgrade_ID> increm_upgrade_1_dep = {Upgrade_ID::unique_upgrade_1, Upgrade_ID::unique_upgrade_2};

// Level A Energy cells
const double increm_upgrade_2_increase_factor = 1.15;
const Price increm_upgrade_2_price = Price(Resource_ID::cinetic_energy, BigNum(100));
const std::vector<Upgrade_ID> increm_upgrade_2_depend = {Upgrade_ID::unique_upgrade_3};
const double increm_upgrade_2_cinetic_gain = 1;
const double increm_upgrade_2_acceleration_gain = 0.001;
const std::vector<Upgrade_ID> increm_upgrade_2_dep = {Upgrade_ID::unique_upgrade_1, Upgrade_ID::unique_upgrade_3};

// ?
const bool increm_upgrade_3_availability = true;
const double increm_upgrade_3_increase_factor = 1.15;
const Price increm_upgrade_3_price = Price(Resource_ID::cinetic_energy, BigNum(11000));
const std::vector<Upgrade_ID> increm_upgrade_3_depend = {Upgrade_ID::unique_upgrade_3};
const double increm_upgrade_3_acceleration_gain = 1000;

/////////////////////
// Unique Upgrades //
/////////////////////

// Terminal
const Price unique_upgrade_1_price = Price(Resource_ID::cinetic_energy, BigNum(15));

// Quantum magnetism
const Price unique_upgrade_2_price = Price(Resource_ID::cinetic_energy, BigNum(20));
const std::vector<Upgrade_ID> unique_upgrade_2_dep = {Upgrade_ID::unique_upgrade_1};

// Level A Booster
const Price unique_upgrade_3_price = Price(Resource_ID::cinetic_energy, BigNum(150));
const std::vector<Upgrade_ID> unique_upgrade_3_dep = {Upgrade_ID::unique_upgrade_2};

}

namespace Message
{

const std::string greeting_message
("Hi! This is the emergency terminal."
 "We sort of... crashed.\n"
 "In space...\n"
 "and time...\n"
 "First, we need to restore the main terminal's power.\n"
 "The only energy source we have for now is cinetic energy generated by...\n"
"you...\n"
 "please, click the cinetic generator until we have enough energy to re-start the console\n"
 );
}

const std::string terminal_message
(
    "\n"
    "Brilliant! the main terminal is on and going!\n"
    "It will help us fix this mess.\n"
    "But to do that, we'll need an enormous amount of energy!\n"
    "We should then work on that at once.\n"
    "According to the main terminal, we"
 );

}


#endif
